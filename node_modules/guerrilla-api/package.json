{
  "name": "guerrilla-api",
  "version": "0.2.1",
  "description": "Guerrilla-api is a node module that wraps the guerrilla api (I have chosen an amazing and creative name, don't you think so?) to smooth the comunication of your app/module with their service.",
  "main": "index.js",
  "scripts": {
    "test": "gulp"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brunokrebs/guerrilla-api.git"
  },
  "keywords": [
    "guerrilla",
    "api",
    "email"
  ],
  "author": {
    "name": "Bruno Krebs",
    "email": "me@brunokrebs.com",
    "url": "http://www.brunokrebs.com/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/brunokrebs/guerrilla-api/issues"
  },
  "dependencies": {
    "request": "^2.65.0",
    "string": "^3.3.1",
    "validator": "^4.2.1"
  },
  "devDependencies": {
    "gulp": "^3.9.0",
    "gulp-mocha": "^2.1.3",
    "mocha": "^2.3.3"
  },
  "readme": "# guerrilla-api\nGuerrilla API module for Node\n\n~~~\nnpm install guerrilla-api\n~~~\n\n## why\nWell, I first wrote this module to enable automated tests that depend on e-mail.\nFor example, I'm design a software where the user can create an account, and it\nis expected that this user receive an e-mail to validate his/her account. Since\nI use [Guerrilla Mail](guerrillamail.com) a lot and they have a not so bad api,\nI have decided to write this module to use it in my automated tests.\n\n## why not\nYou might ask why haven't I used another pre-existing module. You would receive\na short an easy answer: I haven't find any module with a good documentation and\ninterface.\n\n### usage\nFirst things first. Guerrilla Mail api expects you to pass an ip address that is\nthe origin of your requests. Besides that, it also expects you to provide an\n[user agent](https://en.wikipedia.org/wiki/User_agent). So there we go:\n\n```js\nvar Guerrilla = require('guerrilla-api');\nvar guerrillaApi = new Guerrilla('127.0.0.1', 'automated-test-agent');\n```\n\nFrom that, we are now ready to make our first call to Guerrilla api. Let's see\nwhat e-mail address they give us.\n\n```js\nguerrillaApi.getEmailAddress(function(err, address) {\n\tif (err) {\n\t\tconsole.log('Holly crap, something went wrong!' + err);\n\t} else {\n\t\tconsole.log('As I expected. My new temp e-mail is: ' + address);\n\t}\n});\n```\n\nWell, maybe you don't like the e-mail address randomly provided by Guerrilla.\nSo, lets create one of our own.\n\n```js\nguerrillaApi.setEmailAddress(desiredUsernameEmail, function (err, address) {\n\tif (err) {\n\t\tconsole.log('Weirdooo, something went wrong!' + err);\n\t} else {\n\t\tconsole.log('Nice, I have a new e-mail address. Check it out: '\n\t\t\t\t+ address);\n\t}\n});\n```\n\nNow that we have a nice e-mail address, let's check what do we have in our inbox:\n```js\nguerrillaApi.checkEmail(function (err, emails) {\n\tif (err) {\n\t\tconsole.log('Noooooo, an error? It must be a solar storm. Let\\'s see: '\n\t\t\t\t\t+ err);\n\t} else {\n\t\temails.forEach(function(email) {\n\t\t\tconsole.log(email.mail_from +\n\t\t\t\t' sent me an e-mail with the following subject: '\n\t\t\t\t+ mail.mail_subject);\n\t\t});\n\t}\n});\n```",
  "readmeFilename": "README.md",
  "_id": "guerrilla-api@0.2.1",
  "_from": "guerrilla-api@"
}
